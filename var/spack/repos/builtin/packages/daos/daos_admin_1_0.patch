diff --git a/src/control/cmd/daos_admin/main.go b/src/control/cmd/daos_admin/main.go
index d54776984..c5c91d3d5 100644
--- a/src/control/cmd/daos_admin/main.go
+++ b/src/control/cmd/daos_admin/main.go
@@ -99,14 +99,14 @@ func main() {
 	// set up the r/w pipe from the parent process
 	conn := pbin.NewStdioConn(binName, "daos_server", os.Stdin, os.Stdout)
 
-	if os.Geteuid() != 0 {
-		sendFailureAndExit(log, pbin.PrivilegedHelperNotPrivileged(os.Args[0]), conn)
-	}
+//	if os.Geteuid() != 0 {
+//		sendFailureAndExit(log, pbin.PrivilegedHelperNotPrivileged(os.Args[0]), conn)
+//	}
 
 	// hack for stuff that doesn't use geteuid() (e.g. ipmctl)
-	if err := setuid(0); err != nil {
-		sendFailureAndExit(log, errors.Wrap(err, "unable to setuid(0)"), conn)
-	}
+//	if err := setuid(0); err != nil {
+//		sendFailureAndExit(log, errors.Wrap(err, "unable to setuid(0)"), conn)
+//	}
 
 	req, err := readRequest(conn)
 	if err != nil {
diff --git a/src/control/lib/ipmctl/nvm.go b/src/control/lib/ipmctl/nvm.go
index 2b72b9b2e..bdf9d4938 100644
--- a/src/control/lib/ipmctl/nvm.go
+++ b/src/control/lib/ipmctl/nvm.go
@@ -64,6 +64,7 @@ type NvmMgmt struct{}
 // for each.
 func (n *NvmMgmt) Discover() (devices []DeviceDiscovery, err error) {
 	var count C.uint
+	return
 	if err = Rc2err(
 		"get_number_of_devices",
 		C.nvm_get_number_of_devices(&count)); err != nil {
